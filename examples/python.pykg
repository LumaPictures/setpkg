
'''
[main]
default-version = 2.6

[versions]
2.5 =
2.6 =

[subs]
* = pyexternal

[requires]
* = pipe
'''

pkgpath, VERSION = packagedir(env, NAME, VERSION)

env.PYTHON_VER = VERSION

env.PYTHON_VER_FULL = {'2.5' : '2.5.1',
                       '2.6' : '2.6.4'}[VERSION]

env.PY_VERSIONED = '$LUMA_SOFT/py_versioned/$PYTHON_VER'

env.PYTHONPATH += '$HOME/python'
env.PYTHONPATH += pkgpath + '/packages'
env.PYTHONPATH += pkgpath + '/tests'
env.PYTHONPATH += '$LUMA_SOFT/python/packages/compiled/$PYTHON_VER/$OS_ARCH/'
env.PYTHONPATH += '$LUMA_SOFT/python/packages/compiled/$PYTHON_VER/$OS_ARCH_VERSION/'
env.QTDIR = '/usr/local/Trolltech/Qt'
if 'QT_PLUGIN_PATH' in env:
    del env.QT_PLUGIN_PATH
env.PATH += '$QTDIR/bin'
env.PATH += pkgpath + '/bin'
env.PATH += pkgpath + '/packages'

# Python 2.6 supports a "user site-packages", whose "root" is ~/.local,
# instead of /usr/local
# packages installed here (ie, with pip install --install-option="~/.local")
# will install scripts in ~/.local/bin
env.PATH += '$HOME/.local/bin'

env.PYTHON_DIR = '/usr/local/python-$PYTHON_VER_FULL'
if env.OS_TYPE == 'Linux':
    env.PATH += '$PYTHON_DIR/bin'
elif env.OS_TYPE == 'Darwin':
    env.PATH += '$PYTHON_DIR/Python.framework/Versions/$PYTHON_VER/bin'
else:
    env.PYTHON_DIR = 'C:/Python' + str(env.PYTHON_VER_FULL).replace('.', '')
    env.PATH += '$PYTHON_DIR'
    env.PATH += '$PYTHON_DIR/Scripts'
env.CMAKE_PREFIX_PATH += '$PYTHON_DIR'
