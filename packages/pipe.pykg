'''
[main]
version-regex = ((\d+)\.(\d+))|([a-zA-Z0-9]+)
versions-from-regex = True
default-version = luma

[versions]
luma =

[system-aliases]
# Unfortunately, WINE requires the user to *own* the folder for
# preferences to work, so this is our best option, at the moment.
photoshop = sudo /opt/photoshop/bin/photoshop
syntheyes = sudo /opt/syntheyes/bin/syntheyes
syntheyes64 = sudo /opt/syntheyes/bin/syntheyes64
'''
import sys

# (platform module is in the local namespace)
thisSys = system()

# OS/Platform Info -------------------------------------------------------------
env.OS_TYPE = thisSys
env.ARCH = machine()
env.OS_ARCH = '$OS_TYPE-$ARCH'

if thisSys == 'Linux':
    flavor, ver = dist()[:2]
    # Python 2.5 incorrectly reports fedora as redhat
    if (flavor == 'redhat'
            and sys.version_info[:2] <= (2,5)
            and ('.fc%s.' % ver) in release()):
        flavor = 'fedora'
    env.OS_VERSION = '%s.%s' % (flavor, ver)
elif thisSys == 'Darwin':
    # platform.mac_ver() gives
    #    ('10.5.6', ('', '', ''), 'i386')
    env.OS_VERSION = '.'.join(mac_ver()[0].split('.')[:2])
elif thisSys == 'Windows':
    # 6.1.7600
    env.OS_VERSION = '.'.join(version().split('.')[:2])

env.OS_ARCH_VERSION = '$OS_ARCH-$OS_VERSION'


# Base Environment -------------------------------------------------------------
if thisSys == 'Windows':
    env.LUMA_ROOT = 'Z:/Volumes/luma'
else:
    env.LUMA_ROOT = '/Volumes/luma'

env.LUMA_SOFT = '$LUMA_ROOT/_globalSoft'


# Repo Location ----------------------------------------------------------------
sharesFile = open(env.LUMA_SOFT + '/.hg/shares')
try:
    fLines = [l.strip() for l in sharesFile.readlines()]
except:
    print 'PIPE : An error occurred reading shares file'
    import traceback
    traceback.print_exc()
finally:
    sharesFile.close()

repoDict = dict([(sName, sPath) for sPath, sName in [line.rsplit('=', 1) for line in fLines]])

if VERSION_PARTS[3] is None:
    repoString = 'luma-' + VERSION
else:
    repoString = VERSION

repoPath = repoDict.get(repoString)
#FIXME: Need to rename share from 'globalBeta' to 'luma'
if repoPath is None:
    repoPath = repoDict['globalBeta']

env.REPO_PATH = repoPath


# Other Environment Variables --------------------------------------------------
env.SH_PATH = '$REPO_PATH/shell'
env.SETPKG_PATH += '$SH_PATH/packages'

env.PATH += '$LUMA_SOFT/csh'
env.PATH += '$SH_PATH'
env.PATH += '$SH_PATH/bin'
env.PATH += '$LUMA_SOFT/perl'
env.PATH += '$HOME/bin'
env.PATH += '/usr/local/mysql/bin'
env.PATH += '/usr/local/bin'

env.LD_LIBRARY_PATH += '$LUMA_SOFT/lib/$OS_ARCH'
# Is this still necessary?... yes
env.LUMA_LD_LIBRARY_PATH += '$LUMA_SOFT/lib/$OS_ARCH'

if thisSys == 'Linux':
    env.PATH += '$LUMA_SOFT/linux/bin'
elif thisSys == 'Darwin':
    env.PATH += '$LUMA_SOFT/osx/bin'
    env.PATH += '/usr/local/git/bin'
elif thisSys == 'Windows':
    env.HOME = '$USERPROFILE'

env.LUMA_LOG_DIR = '$LUMA_ROOT/_globalAssets/production/logs'

# Place for systems to place scripts on the server
env.PATH += '$LUMA_SOFT/systems/bin'
